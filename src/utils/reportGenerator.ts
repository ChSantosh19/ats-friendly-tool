
// Function to generate a downloadable PDF report
export const generateReport = (results: any) => {
  // In a real implementation, this would use jsPDF or a similar library
  // For demo purposes, we'll create a simple text report and trigger a download
  
  const { 
    resumeFileName, 
    keywordMatches, 
    atsScore, 
    keywordMatchPercentage, 
    interviewProbability,
    missingKeywords 
  } = results;
  
  // Generate report content
  const reportContent = `
ATS SCAN REPORT
-----------------
Resume: ${resumeFileName}
Date: ${new Date().toLocaleDateString()}

SCORES
-----------------
ATS Compatibility Score: ${atsScore}%
Keyword Match: ${keywordMatchPercentage}%
Interview Probability: ${interviewProbability}%

KEYWORD ANALYSIS
-----------------
${Object.entries(keywordMatches)
  .map(([keyword, found]) => `${found ? '✓' : '✗'} ${keyword}`)
  .join('\n')
}

MISSING KEYWORDS
-----------------
${missingKeywords.length > 0 
  ? missingKeywords.join(', ') 
  : 'None! Great job - your resume contains all the important keywords.'}

IMPROVEMENT RECOMMENDATIONS
-----------------
1. Add Missing Keywords: Incorporate the missing keywords naturally into your resume.
2. Use Simple Formatting: Avoid complex layouts, tables, and headers/footers.
3. Use Standard Section Headings: Experience, Education, Skills, Projects, etc.
4. Quantify Achievements: Use numbers and percentages to highlight your impact.
5. Check File Format: Save as a standard PDF with selectable text.

IMPORTANT NOTES
-----------------
* Interview probability is heavily influenced by keyword match percentage
* A keyword match below 40% significantly reduces chances of getting past ATS
* Using industry-specific terminology relevant to the position is crucial

Report generated by ATS ProScan - No data is stored or sent to any server.
All processing is done locally in your browser.
  `;
  
  // Create a blob with the report content
  const blob = new Blob([reportContent], { type: 'text/plain' });
  
  // Create a URL for the blob
  const url = URL.createObjectURL(blob);
  
  // Create a link element
  const a = document.createElement('a');
  a.href = url;
  a.download = `ATS_Scan_Report_${new Date().toLocaleDateString().replace(/\//g, '-')}.txt`;
  
  // Append to the body
  document.body.appendChild(a);
  
  // Trigger the download
  a.click();
  
  // Clean up
  URL.revokeObjectURL(url);
  document.body.removeChild(a);
};
